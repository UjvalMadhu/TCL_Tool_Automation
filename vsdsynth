#!/bin/tcsh -f
echo
echo "*****  A UI that will accept an RTL Netlist & SDC constraits as an input and will generate a synthesized netlist *****"
echo "*****  & pre-layout timing report as an output. It uses Yosys Open Source Tool for Synthesis and OpenTimer to    *****"
echo "*****  generate pre-layout timing Reports.                                                                       *****"
echo ""
echo ""
echo "           Developed by: Ujval Madhu"
echo "           Acknowledgement: Kunal Ghosh, vlsisystemdesign.com"
echo ""
echo ""
echo ""

set my_work_dir = `pwd`


#--------------------------------------#
#--------- Tool Initialization---------#
#--------------------------------------#

if (! -f $argv[1]) then
	if ($argv == "-help") then
		echo "USAGE: ./vsdsynth \<csv_file.csv\>"
		exit 1
	else
		echo "Info: Please provide the csv file"
		exit 1
	endif

set filename [lindex $argv 0]
package require csv
package require struct::matrix
struct::matrix m
set f [open filename]
csv::read2matrix $f m, auto
close $f
set columns [m columns]
m link my_arr
set num_of_rows [m rows]
set i 0
while {$i < $num_of_rows} { 
	puts "\nInfo: Setting $my_arr(0, $i) as '$my_arr(1, $i)'"
	if{$i == 0}{
		set [string map {" " ""} $my_arr(0, $i)] $my_arr(1,$i)
		}
	else {
		set [string map {" " ""} $my_arr(0,$i)] [file normalize $my_arr(1,$i)]
		}
	set i [expr {$i+1}]
	}

	
puts "\n Info: Below are the list of initial variables and their values"
puts "$my_arr(0,1) = $my_arr(1,1)"
puts "$my_arr(0,2) = $my_arr(1,2)"
puts "$my_arr(0,3) = $my_arr(1,3)"
puts "$my_arr(0,4) = $my_arr(1,4)"
puts "$my_arr(0,5) = $my_arr(1,5)"
puts "$my_arr(0,6) = $my_arr(1,6)"
return




